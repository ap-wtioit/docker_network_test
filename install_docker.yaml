- name: install docker
  hosts: docker_servers
  tasks:
    - name: install docker version
      when:
      block:
        - name: dependencies for install
          become: True
          apt:
            cache_valid_time: 3600
            name: [ "ca-certificates", "curl", "gnupg" ]
        - name: docker key
          become: true
          get_url:
            url: "https://download.docker.com/linux/ubuntu/gpg"
            dest: /etc/apt/keyrings/docker.asc
            mode: '0644'
            force: true
            checksum: "sha256:1500c1f56fa9e26b9b8f42452a553675796ade0807cdce11975eb98170b3a570"
        - name: docker repository
          become: True
          apt_repository:
            filename: docker
            repo: "deb [signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable"
          register: _repository
        - name: install docker
          tags: [ "install", "install:docker" ]
          become: True
          apt:
            update_cache: True
            name: [ "docker-ce={{docker_ce_version}}", "docker-ce-cli={{docker_ce_cli_version}}", "containerd.io={{containerd_io_version}}", "docker-buildx-plugin={{docker_buildx_version}}", "docker-compose-plugin={{docker_compose_plugin_version}}" ]
    - name: prune docker system
      become: True
      shell:
        cmd: docker system prune -af --volumes
    - name: docker version
      become: True
      shell:
        cmd: docker version
      changed_when: False
    - name: docker info
      become: True
      shell:
        cmd: docker info
      changed_when: False
    - name: hosts resolv.conf
      shell:
        cmd: cat /etc/resolv.conf
      changed_when: False
    - name: create internal networks
      become: True
      shell:
        cmd: docker network create --internal test_network_internal
    - name: run curl within docker internal network
      become: True
      shell:
        cmd: "docker run --rm --network test_network_internal curlimages/curl --connect-timeout 2 -v --silent 'http://www.google.com/' || true"
    - name: copy Dockerfile
      copy:
        src: Dockerfile
        dest: Dockerfile
    - name: ip route show
      become: True
      shell:
        cmd: "docker build -t ip_route . && docker run --rm --network test_network_internal ip_route"
    - name: use external dns
      become: True
      copy:
        src: resolv.conf
        dest: /etc/resolv.conf
    - name: restart docker
      become: True
      service:
        name: docker
        state: restarted
    - name: run curl within docker internal network
      become: True
      shell:
        cmd: "docker run --rm --network test_network_internal curlimages/curl --connect-timeout 2 -v --silent 'http://www.google.com/' || true"